FROM python:3.9.7-alpine3.13

# Remove APK cache
RUN set -x \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/* \
    && apk update

# add repo
RUN echo -e '@edge http://dl-cdn.alpinelinux.org/alpine/edge/main\n@edgecommunity http://dl-cdn.alpinelinux.org/alpine/edge/community\n@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories

# Update alpine package index
RUN apk update

RUN apk add \
     # important things 
     curl git wget build-base gcc git@edge libtool m4 autoconf automake swig \
     # Megasdk deps
     pkgconf musl libmagic@edge musl-dev c-ares-dev c-ares crypto++-dev@testing curl-dev \
     libxml2-dev@edge libxslt-dev@edge libffi-dev postgresql-dev python3-dev@edge freeimage-dev libsodium-dev sqlite-dev zlib-dev libressl-dev@edgecommunity \
     # mirrorbot deps
     linux-headers@edge jq tzdata pv@edgecommunity mediainfo@edgecommunity py3-lxml unzip aria2 \
     xz neofetch@edgecommunity qbittorrent-nox@testing openssl@edge glib@edge p7zip ffmpeg@edgecommunity \
     # for localgen on https://github.com/gliderlabs/docker-alpine/issues/144#issuecomment-889769040
     && apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.13/community musl-locales musl-locales-lang \
     && MUSL_LOCPATH="/usr/share/i18n/locales/musl" \
     && cd "$MUSL_LOCPATH" \
     && for i in *.UTF-8; do cp -a "$i" "${i%%.UTF-8}"; done \
     && pip3 install --no-cache-dir --upgrade setuptools wheel \
     # Installing MegaSDK Python Binding
     && MEGA_SDK_VERSION="3.9.2" \
     && git clone https://github.com/meganz/sdk.git --depth=1 -b v$MEGA_SDK_VERSION ~/home/sdk \
     && cd ~/home/sdk && rm -rf .git \
     && ./autogen.sh && ./configure --disable-silent-rules --with-python3 --enable-python --with-sodium --disable-examples \
     && make -j`grep -c '^processor' /proc/cpuinfo` \
     && cd bindings/python/ && python3 setup.py bdist_wheel \
     && cd dist/ && pip3 install --no-cache-dir megasdk-$MEGA_SDK_VERSION-*.whl 

# Installing MirrorBot Requirements and Cleanup     
RUN wget https://raw.githubusercontent.com/breakdowns/slam-tg-mirror-bot/master/requirements.txt \
    && pip3 install --no-cache-dir -r requirements.txt \
    && rm requirements.txt \
    && apk del --purge pkgconf libtool autoconf automake m4 swig \
    && rm -vrf /var/cache/apk/* \

# Set Environment
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8
