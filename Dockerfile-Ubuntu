FROM narima/base:ubase

RUN set -ex \
    # setup env
    && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -qq update \
    && apt-get -qq -y install software-properties-common \
    && add-apt-repository universe \
    && add-apt-repository multiverse \
    && add-apt-repository ppa:poplite/qbittorrent-enhanced \
    && apt-get -qq update \
    && apt-get -qq -y install --no-install-recommends \
        # important
        tzdata apt-utils build-essential \
        # build deps
        autoconf automake g++-11 gcc-11 gcc git libtool m4 make swig \
        # mega sdk deps
        libc-ares-dev qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools libcrypto++-dev libcurl4-openssl-dev \
        libfreeimage-dev libsodium-dev libsqlite3-dev libssl-dev zlib1g-dev libc6 \
        # mirror bot deps
        curl wget ffmpeg p7zip-full p7zip-rar jq xz-utils tar locales \ 
        aria2 pv python3-lxml qbittorrent-enhanced-nox neofetch \
        # arm64 deps
        libpq-dev libffi-dev \
    && apt-get -qq -y autoremove --purge \
    && sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
    && locale-gen \
    # requirements mirror-bot
    && wget https://raw.githubusercontent.com/Ncode2014/megaria/req/requirements.txt \
    && pip3 install --no-cache-dir -r requirements.txt \
    && rm requirements.txt \
    # setup mega sdk
    && MEGA_SDK_VERSION='3.9.4' \
    && git clone https://github.com/meganz/sdk.git --depth=1 -b v$MEGA_SDK_VERSION ~/home/sdk \
    && cd ~/home/sdk && rm -rf .git \
    && autoupdate -fIv && ./autogen.sh \
    && ./configure --disable-silent-rules --enable-python --with-sodium --disable-examples \
    && make -j$(nproc --all) \
    && cd bindings/python/ && python3 setup.py bdist_wheel \
    && cd dist/ && pip3 install --no-cache-dir megasdk-$MEGA_SDK_VERSION-*.whl

# Cleanup environment
RUN apt-get -qq -y purge autoconf automake g++-10 gcc gcc-10 libtool m4 make software-properties-common swig apt-utils \
    && rm -rf -- /var/lib/apt/lists/* /home/* /var/cache/apt/archives/* /etc/apt/sources.list.d/* \
    && rm -r /tmp/* \
    && apt-get -qq -y update && apt-get -qq -y upgrade && apt-get -qq -y autoremove && apt-get -qq -y autoclean && apt-get clean --dry-run

# workdir set
WORKDIR /usr/src/app
RUN chmod 777 /usr/src/app

# locale
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

CMD ["bash", "start.sh"]
